doctype html
html(lang="en")
  head
    meta("keywords", "WebRTC, HTML5, JavaScript")
    meta("name", "description" content="WebRTC Reference App")
    meta("viewport", "width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1")

    title Web RTC Test video chat ( developement)

    script(src="socket.io/socket.io.js")
    script(src="javascripts/lib/jquery.min.js")
    script(src="javascripts/lib/adapter.js")
    script(src="javascripts/lib/underscore-min.js")
    script(src="javascripts/lib/backbone-min.js")
    link(rel='stylesheet', href='stylesheets/style.css')

  body
    h1 Welcome to Room #{roomId}
    #peers
      h3 Session info :
      #localPeer
      #localStreamContainer
          h3  Local video configuration :
          #localOptions
            #videoOptions
              p.inline Select the video quality for the local stream :
              select.inline.smallLeftMargin#videoSelector
                each videoDefinition in videoDefinitions
                  option(value=videoDefinition) Video #{videoDefinition}
              p.inline.smallLeftMargin Toggle video :
              button(disabled='disable').inline.smallLeftMargin#localVideoToggle No video
            #audioOptions
               p.inline Select the audio for the local stream  :
               select.inline.smallLeftMargin#audioSelector
                option(value="false") Audio None
                option(value="true")  Audio Active
               p.inline.smallLeftMargin Toggle audio :
               button(disabled='disable').inline.smallLeftMargin#localAudioToggle No audio
            #dataOptions
               p.inline Activate Data comunication :
               button(disabled='disable').inline.smallLeftMargin#dataLocalToggleButton Data Channel Inactive
      h3 Remote peers info :
      ul#peerList

    script(type="text/template")#peer-template
        <div>
        <div class="remotePeerInfo"> </div>
        <div class="remotePeerMediaContainer"> </div>
        </div>

    script(type="text/template")#peer-template-info
          <p> Peer : <strong> <%=peerId %> </strong> </p>
          <p class="inline smallLeftMargin"> Status :
          <p class="inline smallLeftMargin iceConnection">IceConnectionState : <%= iceConnectionState %> </p>
          <p class="inline smallLeftMargin iceGathering">IceGatheringState  : <%= iceGatheringState %> </p>
          <p class="inline smallLeftMargin signalingState">SignalingState : <%= signalingState %> </p>
          </p>

    script(type="text/template")#peer-template-media
           <video class="smallLeftMargin" autoplay='autoplay'></video>

    script(type="text/template")#localPeer-template
          <div class="localPeer"><p> Session initialized. Local peer  has received the following id : <strong><%=peerId %></strong> <br>
          Connected  peers : <strong><%=connectedPeers %></strong><br>
          Local Streams : <%=streams %><br>
          </p> </div>

    script(src="javascripts/model/PeerConnection.js")
    script(src="javascripts/model/PeerSession.js")
    script(src="javascripts/view/PeerView.js")
    script(src="javascripts/view/AppView.js")
    script(src="javascripts/helpers/SignalingServiceFrontEnd.js")
    script(src="javascripts/helpers/utils.js")
    script(src="javascripts/helpers/log.js")
    script(src="events/events.js")

    script(type='text/javascript').
         new app.AppView();
